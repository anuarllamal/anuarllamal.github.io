MODULO 4 - RESPONSIVE WEB DESIGN

BLOQUE IV- 3-BOOTSTRAP
https://getbootstrap.com/docs/5.3/getting-started/introduction/
-La idea es ir aprendiendo a usar y a navegar dentro de la documentacion de Bootstrap, comenzando por su cheatsheet:
https://getbootstrap.com/docs/5.0/examples/cheatsheet/

-En la cual vemos TOOOOODOS los componentes y recursos de los que podemos echar mano. Parrafo aparte: fijate bien la version del framework que vayas a usar!

Ahora, vamos al ejemplo n°1 (breakpoints):
https://getbootstrap.com/docs/5.3/layout/breakpoints/
Recordemos que son anchos "customizables" que determinan el comportamiento del layout de la web. Que dice?
-Que son fundacionales del diseño responsivo
-Que usemos media queries para mejorar el css a los breakpoints
-Que siempre diseñemos primero para moviles

-Que es lo que esta zarpado de bootstrap?-
Que ya trabaja POR DEFECTO con 6 breakpoints, con 6 clases predefinidas para acomodarse en el modelo de 12 columnas. Y asi con todo. Trabaja con clases predefinidas para tooooodos los elementos (ver cheatsheet).

a) Las grid en Bootstrap y el <div class="container"></div>
Las grids aca funcionan mediante una serie de contenedores, filas y columnas para armar el layout y alinear el contenido mediante el modelo flexbox. Vamos al segundo ejemplo (obvio copio solo el container):

<body>
    <div class="container"></div>
    <p>Hola mundo</p>
</body>
</html>

Ese contenedor arma una caja, que tiene un margen y un estilo en particular. Cómo hago para que ocupe toda la linea? Debo recurrir a "container-fluid"

<body>
    <div class="container-fluid"></div>
    <p>Hola mundo</p>
</body>
</html>


b) Columnas y filas
Teniendo en cuenta el concepto de column y row dentro de Bootstrap, vamos al siguiente ejemplo:

<div class="container">
        <div class="row">
          <div class="col">
            Columna 1
          </div>
          <div class="col">
            Columna 2
          </div>
          <div class="col">
            Columna 3
          </div>
        </div>
      </div>

Lo que ocurrira aca es que Bootstrap mismo divide predeterminadamente en 3 las 12 columnas y por eso aparecen 3 de 4 de ancho. Si yo quiero modificarla, tengo que entrar a tocar el col:
<div class="container">
        <div class="row">
          <div class="col-7">
            Columna 1
          </div>
          <div class="col">
            Columna 2
          </div>
          <div class="col">
            Columna 3
          </div>
        </div>
      </div>

Y ahi quedaran 7, 3 y 2, a menos que especifiquemos aun mas. Y es importante aclarar lo siguiente:

*POR DEFECTO, Bootstrap viene predefinido desde lo MAS PEQUEÑO. Es decir, que si pongo 3 columnas iguales sin definir, siempre seran desde sm (celu) hacia arriba. PERO si quiero definir un breakpoint es hacia ARRIBA. Es decir, que si yo quiero definir un comportamiento distinto para una pc tengo que:

<div class="container">
        <div class="row">
          <div class="col-7 col-xl-4">
            Columna 1
          </div>
          <div class="col-3 col-xl-4">
            Columna 2
          </div>
          <div class="col-2 col-xl-4">
            Columna 3
          </div>
        </div>
      </div>

Y ahi lo que pasara es que Bootstrap va a dividir para las pantallas chicas, pero va a dejar igual unicamente a las mas grandes (el breakpoint es solo para mas de 1200 px creo).


CONSIDERACIONES FINALES
Como consideracion final, la cosa es meterse a investigar TOOOODOS los recursos para diseñar un sitio responsive dentro de Bootstrap y ver la forma de insertarlos y pensar en quien va a consumir nuestro sitio y de que manera.