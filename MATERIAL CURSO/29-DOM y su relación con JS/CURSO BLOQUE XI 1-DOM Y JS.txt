MÓDULO XI - FUNDAMENTOS DE JS (II)

BLOQUE I - DOM Y SU RELACIÓN CON JS
https://www.w3schools.com/js/js_htmldom.asp
Nosotros aprendimos medio onda sueltos los eventos de JS y como pueden influenciar sobre el documento, pero en realidad tenemos que entender el concepto del DOM para que todo nos cierre. El Document Object Model es un modelo estandar de relacion entre objeto y documento que nos permite, en el caso del HTML, acceder, cambiar, agregar o borrar elementos en la web.

En el sitio vemos el arbol de objetos HTML DOM. Por que es importante? Porque entendemos como se manipula un documento con JS. Como lo vemos?
-En el VS ya se ordenan las secciones (index.html - html - body)
-Y en la consola se ordena también de izquierda a derecha abajo

Lo que te muestra es el arbol de jerarquia de como se ordenan las cosas y como podremos tocarlas pensando en el dom.


Vamos a un ejemplo. Queremos que, mediante un estilo de formulario en HTML, se ejecute una pequeña suma con un boton:

HTML
<form>
        <label>Número 1
          <input type="number" id="numero1" required>
        </label>
        <label>Número 2
            <input type="number" id="numero2" required>
          </label>
          <button type ="button" id="sumar">Realizar suma</button>
    </form>

    <div id="contenedorResultado" style="display: none;">
        El resultado de la suma es <p id="resultado"></p>
    </div>

    <script src="js/sumar.js"></script>

1) Creamos tipo un formulario para que ingresen numeros. Ademas, le agregamos required para que si o si entren en ambos. Siempre va label para que este correcto.
2) Luego creamos un boton de tipo boton para que realice la suma
3) Creamos un div que NO se muestra (display none) hasta que lo llamamos con el resultado de la suma y ahi si aparece el texto
4) Pasamos a la hoja de JS para diseñar las funciones

JS
document.getElementById('sumar').addEventListener('click', function(){
    let numeroA = document.getElementById('numero1').value;
    console.log('El valor del número A es: '+numeroA)
    let numeroB = document.getElementById('numero2').value;
    console.log('El valor del número B es: '+numeroB)
    let resultado = sumar(parseInt(numeroA), parseInt(numeroB));
    console.log('El resultado de la suma es: '+resultado)

    document.getElementById('resultado').innerHTML = resultado;
    document.getElementById('contenedorResultado').style.display = "block";
});

function sumar(a,b){
    return a + b
}

1) Aqui vamos con la misma estructura de obtener mediante id y abrimos una funcion
2) let numeroA definimos la variable del primer numero que toma el valor del numero1 (con value). Tambien ponemos un console.log porque queremos que nos diga en la consola que hizo
3) let numeroB definimos la variable del primer numero que toma el valor del numero2 (con value). Tambien ponemos un console.log porque queremos que nos diga en la consola que hizo
4) Creamos una funcion sumar debajo (a,b) con resultado a a + b
5) Y a esa le remitiremos el resultado mediante let resultado = sumar
6) Pero aca es clave que pongamos (parseInt (numeroA) para que los tome como numeros, porque si lo ponemos con numeroA solo, lo toma como caracter y en vez de sumar 10+5=15 sumara 10+5=105 (todo de corrido)
7) Le agregamos mediante :
    document.getElementById('resultado').innerHTML = resultado;
    document.getElementById('contenedorResultado').style.display = "block";
Que muestre el resultado Y que lo haga en forma de bloque (referenciados al id del container).


Con esta leccion, vemos como, mediante el manejo del DOM, podemos modificar todo el documento con JS, tanto con HTML como con CSS.