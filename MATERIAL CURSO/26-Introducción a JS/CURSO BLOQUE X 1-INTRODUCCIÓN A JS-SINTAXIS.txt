MÓDULO X - FUNDAMENTOS DE JS (PARTE I)

BLOQUE I - INTRODUCCIÓN A JS, SINTAXIS Y CÓMO ESCRIBIR UN DOCUMENTOS EN JS
https://www.w3schools.com/js/js_syntax.asp
https://www.w3schools.com/js/js_variables.asp
Para aprender JS, necesitamos empezar con la SINTAXIS. Vamos al ejemplo:

var miVariable;
let nombre;
const IVA = 1.21;

Aqui tenemos los 3 operadores de variables fundamentales: var, const y let., y hay que clasificarlos para su uso:
a. var fue la definicion de variable por excelencia hasta el 2015, cuando surgieron las otras 2. Para todo sistema viejo, es indispensable usarla, pero para los nuevos conviene por ahi recurrir a las otras dos, puesto que son mas exactas.
b. let y const definen por igual variables, pero conviene usar const cuando sabemos que el valor de la variable que viene va a ser CONSTANTE durante todo el programa, y let si creemos que la variable puede cambiar sus resultados

1) Formato
Las variables se construyen de la misma manera:

                                  (y el punto y coma es el limitador)
var         nombre       = "Juan";
(palabra    (nombre de      (valor)
reservada)  la variable)

--Nota 1: PALABRAS RESERVADAS--
Son los terminos que definen las ordenes de ejecucion que NO SE PUEDEN USAR SALVO PARA ESO, por lo que estan prohibidas. Por ejemplo, var, let y const.

--Nota 2: NOMBRES DE LAS VARIABLES--
Las variables tienen que estar identificadas con un UNICO nombre. No armes quilombo con eso. Aprovecha que podes denominarlas como quieras y con texto y algun numero. PERO, siguiendo estas reglas:
-Pueden contener letras, digitos, guiones bajos y signos dolar. IGUAL trata de no usar el signo dolar porque es una funcion de otros lenguajes, o sea, mejor ni lo metas
-Los nombres DEBEN empezar con una letra y NO pueden empezar con un numero. Sin embargo, si pueden contener numeros. Tambien pueden empezar con un _
-Los nombres SON CASE SENSITIVE: var Y no es lo mismo que var y
-No podes usar los terminos reservados (nota 1)


2) Donde lo situamos dentro del HTML?
JS sera la "capa de interactividad" dentro de nuestra pagina web, como HTML es el lenguaje de marcado que dara la estructura y CSS el que formara la capa de presentacion. Y donde va cada uno? Recordemos:
-Que como CSS, si lo metemos inline, va en el HEAD
-JS va dentro del body mediante el elemento <script>. Ejemplo:

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JS en body</title>
</head>
<body>

    <script>
        console.log("Hola Mundo!");
    </script>
    
</body>
</html>

--Ahora, esto esta bien?--
Depende del tamaño del documento. Formalmente esta bien, pero solo si tu proyecto es un solo documento html. Si es un proyecto complejo (lo vamos a ver mas adelante), utilizaremos metodos mas eficientes, como usar una hoja externa estilo el famoso link rel de CSS.


COMENTARIOS EN JS
Hay algo muy interesante para saber. JS tiene la posibilidad de comentar de dos maneras:

1) Comentario de una sola linea: //

2) Comentario MULTI LINEA: /**
                            *
                            */
-Agregas todos los asteriscos que quieras por linea en este caso; basicamente, este tipo de comentario te re sirve para la documentacion, tipo para escribir parrafos, pero la realidad es que casi siempre vas a usar lo de una linea. 
-Importante pero no de mas recordarlo, no comentar pelotudeces ni obviedades (digamos explicar para qué funciona cada línea). Comenta siempre cosas que sean necesarias de aclarar, sea en 1 o varias lineas.