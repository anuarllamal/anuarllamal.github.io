MODULO 5 - HOSTING Y REPOSITORIOS

BLOQUE II- INTRODUCCION A GIT Y VERSIONADO
https://git-scm.com/

Qué es GIT y qué es el versionado?
El versionado es basicamente la creacion de versiones de cambios del codigo fuente
(para nosotros, en el VS), mediante herramientas tales como GIT. Si yo ahora cambio algo y no me acuerdo o lo anoto, ese cambio no queda registrado. Con GIT,
tengo la posibilidad de ver los cambios, quien los hizo y muchas cosas mas. Es 
una herramienta que trabaja sobre LINUX, asi que trabaja con COMANDOS.
https://git-scm.com/docs

-Instalarlo
Primero que nada, debo instalarlo para mi sistema operativo. Sirve para TODOS los SO y para Android/IOs.

-Terminal
Lo segundo es abrir una nueva TERMINAL desde el menú de VS, ya que nosotros vamos 
a interactuar con GIT desde ahí. Con el GIT instalado, ya podemos empezar a ver que hace. Si ponemos --version, ya nos aparecera la version, por ejemplo.

1) VERSIONADO
a. Lo primero importante de GIT es aprender a VERSIONAR. Como crear una  version 
para que luego se registren los cambios y sepamos quien y cuando los hicieron. Lo 
primero que hay que hacer es crear un REPO asi:

%git init
Con este comando, crea un repositorio nuevo y apareceran unas U al lado de las 
paginas de nuestro proyecto (de Unmarked). Debemos seguir y:

%git config user.name "Anuar Llamal"
%git config user.mail "anuarllamal@gmail.com"

-Ahi ya me identifique para GIT, para que registre que mis cambios e  ingresos son
mios y de esta pc, y para que quede todo ordenado dentro del repositorio que sera 
la segunda parte de esto.

Si yo ahora pongo el comando status, me dira que "no hay COMMITS" todavia. Los 
commits son las confirmaciones, las escrituras que hicimos en el repo local de los 
cambios agregados.

b. El siguiente paso sera agregar todo al commit inicial mediante add:
-%git add .
Lo ejecuto con el (.) porque en GIT es comodin, y agregara de forma inicial a todos los archivos de nuestro proyecto. Si ponemos status ahora, apareceran todos en verde dentro de la terminal y los nombres de los archivos en el explorador a la izquierda tambien apareceran en verde y con la letra A (de Added).

c. El tercer paso sera la creacion de la PRIMER version de todos los archivos del
proyecto. Para ello, ingresaremos:
%git commit -m "Primer escritura"

El -m es el mensaje que yo pongo para esa escritura, que no sea una locura pero que en una oracion resumas las modificaciones hechas. Y cuando lo ejecuto, desaparecen las A y el verde de todo porque es como que se ingreso todo. De hecho, pongo status y aparece "No hay nada para hacer commit en la rama master, arbol de trabajo limpio".

Esto significa que ya tengo mi primer validado en el repo LOCAL. Para ver la validez de esto, usas el comando log y te aparece un hash del commit hecho y quien fue el autor.


2) PRUEBA de modificacion
Con todo esto, ahora los cambios quedan registrados, por ende, yendo a la practica, vamos a entrar en un HTML cualquiera y modifiquemos el titulo por una palabra.
-Lo primero que va a pasar va a ser que ese documento HTML aparecera con una M (de 
modified) y se pondra rojo.
-Vamos, entonces, a la terminal y si ejecutamos status, veremos que figura que hubo modificaciones en index.html
-Si nosotros queremos saber CUAL fue la modificacion/es realizada, ejecutamos $git
diff index.html y veremos los cambios especificos que se realizaron en dicho/s
documentos.
Nota: VER ESTO, porque si pones git diff aparece, pero al querer elegir el doc
HTML da error, ni idea.


Esto sería lo basico de GIT, pero luego veremos la segunda parte, el tema del repo
REMOTO, que te permitira tener los cambios respaldados en linea y no vas a perder
un registro valiosisimo si se te muere la pc. Es super importante ir aprendiendo, GIT es una herramienta indispensable hoy en el mundo laboral, todos en informatica la piden, por lo que no esta de mas ir viendola de a poquito en sus comandos.